{"version":3,"sources":["images/randomizer.jpg","images/memory.png","images/draft.png","images/pokefind.jpg","Navbar.js","Project.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","nav","flexGrow","position","top","zIndex","toolbar","justifyContent","Navbar","classes","className","AppBar","color","Toolbar","IconButton","edge","aria-label","href","Button","target","card","width","marginTop","breakpoints","down","title","display","flexWrap","alignItems","padding","icon","marginRight","titleButtons","technologies","margin","tech","border","borderRadius","Project","project","img","body","site","code","Card","variant","CardMedia","component","alt","height","image","CardContent","Typography","CardActions","size","Divider","map","i","key","createMuiTheme","palette","primary","main","secondary","about","textAlign","wordBreak","backgroundColor","intro","flexDirection","projects","marginBottom","App","randomizer","memory","pokefind","draftmons","ThemeProvider","endIcon","id","draft","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.750d5cc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/randomizer.77c40807.jpg\";","module.exports = __webpack_public_path__ + \"static/media/memory.1edd10fb.png\";","module.exports = __webpack_public_path__ + \"static/media/draft.4a34d5a2.png\";","module.exports = __webpack_public_path__ + \"static/media/pokefind.bcaac616.jpg\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  nav: {\r\n    flexGrow: 1,\r\n    position: \"sticky\",\r\n    top: 8,\r\n    zIndex: 1\r\n  },\r\n  toolbar: {\r\n    justifyContent: \"space-between\"\r\n  }\r\n}));\r\n\r\nfunction Navbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.nav}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" href=\"#\">\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <div>\r\n            <Button\r\n              edge=\"end\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              target=\"_blank\"\r\n              href=\"https://drive.google.com/open?id=1Swpa0wf7uKvFk_oy7vMzLHscUWz9S0YS\"\r\n            >\r\n              Resume\r\n            </Button>\r\n            <IconButton\r\n              edge=\"end\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              target=\"_blank\"\r\n              href=\"https://github.com/TokyoDom\"\r\n            >\r\n              <GitHubIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              href=\"mailto:tokyodom1@outlook.com\"\r\n            >\r\n              <EmailIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              target=\"_blank\"\r\n              href=\"https://www.linkedin.com/in/tokyodom/\"\r\n            >\r\n              <LinkedInIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    width: \"70vw\",\r\n    marginTop: \"10vh\",\r\n    [theme.breakpoints.down('md')]: {\r\n      width: \"95vw\"\r\n    }\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \"4px 0\"\r\n  },\r\n  icon: {\r\n    marginRight: 4\r\n  },\r\n  titleButtons: {\r\n    padding: \"8px 0\"\r\n  },\r\n  technologies: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    margin: \"8px 0\"\r\n  },\r\n  tech: {\r\n    display: \"inline-block\",\r\n    border: \"1px solid black\",\r\n    padding: \"0 4px\",\r\n    borderRadius: 5,\r\n    margin: 4\r\n  }\r\n}));\r\n\r\nfunction Project({ project, img, body, tech, site, code }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card} variant=\"outlined\">\r\n      <CardMedia\r\n        component=\"img\"\r\n        alt={project}\r\n        height=\"350\"\r\n        image={img}\r\n        title={project}\r\n      />\r\n      <CardContent>\r\n        <CardContent className={classes.title}>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {project}\r\n          </Typography>\r\n          <CardActions className={classes.titleButtons}>\r\n            <Button size=\"small\" color=\"secondary\" variant=\"contained\" target=\"_blank\" href={site}>\r\n              <VisibilityIcon className={classes.icon} /> Site\r\n            </Button>\r\n            <Button size=\"small\" color=\"primary\" variant=\"contained\" target=\"_blank\" href={code}>\r\n              <CodeIcon className={classes.icon} /> Code\r\n            </Button>\r\n          </CardActions>\r\n        </CardContent>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n          {body}\r\n        </Typography>\r\n        <Divider />\r\n        <div className={classes.technologies}>\r\n          {tech.map((tech, i) => (\r\n            <Typography key={i} className={classes.tech}>\r\n              {tech}\r\n            </Typography>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","import React from \"react\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport Project from \"./Project\";\nimport randomizer from './images/randomizer.jpg';\nimport memory from './images/memory.png';\nimport draft from './images/draft.png';\nimport pokefind from './images/pokefind.jpg';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#4F5C88\"\n    },\n    secondary: {\n      main: \"#536A96\"\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  about: {\n    margin: \"24px auto\",\n    textAlign: \"center\",\n    wordBreak: \"keep-all\",\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\"\n  },\n  intro: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: \"5vh\"\n  },\n  projects: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    marginTop: \"75vh\",\n    marginBottom: \"10vh\"\n  }\n}));\n\nconst bodyText = () => {\n  return {\n    randomizer: `A Pokemon team randomizer using competitive Smogon sets and fun custom sets!\n    Filter based on your favorite generation and tier and export the team to Pokemon Showdown.`,\n    memory: `A simple flashcard application where users can create and save sets to practice with. \n    I've been personally using it to study Japanese!`,\n    pokefind: `Web application to find information on your favorite Pokemon. \n    Get detailed information on Pokemon, Moves, Abilities, and Types! The application will take a bit to load since it's hosted on Heroku.`,\n    draftmons: `Pokemon meets League of Legends... \n    A website where players can create a room and invite their friends to draft teams against eachother!`\n  };\n};\n\nconst techText = () => {\n  return {\n    randomizer: [\"HTML/CSS\", \"ReactJS\", \"ExpressJS\", \"MongoDB\"],\n    pokefind: [\"HTML/CSS\", \"ReactJS\", \"ExpressJS\", \"MySQL\"],\n    draftmons: [\"HTML/CSS\", \"ReactJS\", \"Firebase\"],\n    memory: [\"HTML/CSS\", \"ReactJS\", \"Firebase\"]\n  };\n};\n\nconst codeText = () => {\n  return {\n    randomizer: {\n      code: \"https://github.com/TokyoDom/pokerandomizer\",\n      site: \"https://pokerandomizer.xyz/\"\n    },\n    memory: {\n      code: \"https://github.com/TokyoDom/memorycards\",\n      site: \"https://tokyodom.github.io/memorycards/#/\"\n    },\n    draftmons: {\n      code: \"https://github.com/TokyoDom/draftmons\",\n      site: \"http://draftmons.com/\"\n    },\n    pokefind: {\n      code: \"https://github.com/TokyoDom/pokefind\",\n      site: \"https://thawing-bastion-55951.herokuapp.com/\"\n    }\n  };\n};\n\nfunction App() {\n  const classes = useStyles();\n  const body = bodyText();\n  const tech = techText();\n  const code = codeText();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Navbar />\n        <div className={classes.intro}>\n          <h1>Always Learning.</h1>\n          <h1>Always Creating.</h1>\n          <h4 className={classes.about}>\n            I'm Dominick, a Developer based in Tokyo, Japan. Check out my\n            projects and feel free to contact me! よろしくお願いします！\n          </h4>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            href=\"#projects\"\n            endIcon={<ArrowDropDownIcon />}\n          >\n            View Projects\n          </Button>\n        </div>\n        <div id=\"projects\" className={classes.projects}>\n        <Project\n            project=\"Pokemon Randomizer\"\n            img={randomizer}\n            body={body.randomizer}\n            tech={tech.randomizer}\n            site={code.randomizer.site}\n            code={code.randomizer.code}\n          />\n          <Project\n            project=\"Memory Cards\"\n            img={memory}\n            body={body.memory}\n            tech={tech.memory}\n            site={code.memory.site}\n            code={code.memory.code}\n          />\n          <Project\n            project=\"PokeFind\"\n            img={pokefind}\n            body={body.pokefind}\n            tech={tech.pokefind}\n            site={code.pokefind.site}\n            code={code.pokefind.code}\n          />\n          <Project\n            project=\"Draftmons\"\n            img={draft}\n            body={body.draftmons}\n            tech={tech.draftmons}\n            site={code.draftmons.site}\n            code={code.draftmons.code}\n          />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}